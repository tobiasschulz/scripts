#!/bin/bash

if [ "x$x" = "x" ]
then
	echo Usage: $0 OUTPUT_DIR
	exit 0
fi

export OUTPUT_DIR=$1

# Pre-requisites
export INSTALL="git subversion gyp ninja-build"
for pkg in $INSTALL
do
    dpkg -l | grep " $pkg " >/dev/null 2>&1 || aptitude install $INSTALL
done

# Source directory
cd
mkdir -p src/
cd src

if ! test -d chromium
then
	# Install chromium repository tools
	git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
	export PATH="$PATH":`pwd`/depot_tools

	# Config chromium project
	mkdir chromium && cd chromium
	gclient config https://src.chromium.org/chrome/trunk/src https://chromium-status.appspot.com/lkgr

	# Checkout only source code
	gclient sync --nohooks

	# Install dependencies
	./src/build/install-build-deps.sh

	# Build project files
	export GYP_GENERATORS='ninja'
	export GYP_DEFINES=werror= 
	gclient sync --force

	# Compile chromium
	# ninja -C src/out/Release chrome
	# And run it!
	# ./src/out/Release/chrome
fi

export API=AIzaSyDJNQKHk0JqIXoElC7Eyx52bPreEeCG1kA
export ID=770838328454.apps.googleusercontent.com
export SEC=sQ7CshVP5xvGrDJ5DEiUYlx8

cd ~/src/chromium/src
if ! grep "define GOOGLE_CLIENT_ID_REMOTING" google_apis/google_api_keys.cc | grep -vi DUMMY
then
	mv google_apis/google_api_keys.cc google_apis/google_api_keys.cc.bak && \
	(echo '#define GOOGLE_CLIENT_ID_REMOTING "770838328454.apps.googleusercontent.com"'
	echo '#define GOOGLE_CLIENT_SECRET_REMOTING "sQ7CshVP5xvGrDJ5DEiUYlx8"') > google_apis/google_api_keys.cc && \
	cat google_apis/google_api_keys.cc.bak >> google_apis/google_api_keys.cc && \
	rm google_apis/google_api_keys.cc.bak
fi

mkdir google_apis/internal 2>/dev/null
cat > google_apis/internal/google_chrome_api_keys.h << EOT
#define GOOGLE_API_KEY "$API"
#define GOOGLE_CLIENT_ID_MAIN "$ID"
#define GOOGLE_CLIENT_SECRET_MAIN "$SEC"
#define GOOGLE_CLIENT_ID_REMOTING "$ID"
#define GOOGLE_CLIENT_SECRET_REMOTING "$SEC"
EOT
# Build custom Chrome Remote desktop Web App first
./build/gyp_chromium -Dgoogle_api_key="$API" -Dgoogle_default_client_id="$ID" -Dgoogle_default_client_secret="$SEC" -Dgoogle_remoting_client_id="$ID" -Dgoogle_remoting_client_secret="$SEC"
ninja -C out/Release/ remoting_me2me_host remoting_start_host remoting_webapp

# Extract newly created zip file into a temporary folder
unzip out/Release/remoting-webapp.zip -d /tmp/

./remoting/host/installer/linux/build-deb.sh

mkdir -p $OUTPUT_DIR 2>/dev/null
cp out/Release/remoting-webapp.zip remoting/host/installer/*.deb $OUTPUT_DIR
